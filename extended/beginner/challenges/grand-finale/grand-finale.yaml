apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: grand-finale
data:
  database_url: "postgresql://db:5432/myapp"
  log_level: "info"
  cache_size: "128MB"
---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: grand-finale
type: Opaque
data:
  username: YWRtaW4= # admin
  password: c2VjcmV0MTIz # secret123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broken-web-app
  namespace: grand-finale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-application
  template:
    metadata:
      labels:
        app: broken-web-app
    spec:
      serviceAccountName: web-app-service-account
      containers:
        - name: web-server
          image: nginx:1.21-alpine
          ports:
            - containerPort: 80
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-settings
                  key: database_url
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-credentials
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: log_level
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: data-storage
              mountPath: /var/data
            - name: cache-volume
              mountPath: /tmp/cache
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: sidecar-logger
          image: busybox:1.35
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "📝 Logger sidecar starting..."
              while true; do
                echo "$(date): Processing logs..." >> /shared/app.log
                sleep 15
              done
          volumeMounts:
            - name: shared-logs
              mountPath: /shared
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"
      volumes:
        - name: config-volume
          configMap:
            name: application-config
        - name: data-storage
          persistentVolumeClaim:
            claimName: app-data-pvc
        - name: cache-volume
          emptyDir:
            sizeLimit: "100Mi"
        - name: shared-logs
          emptyDir: {}
